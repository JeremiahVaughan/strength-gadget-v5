version: 2.1

jobs:
  build:
    docker:
      - image: cimg/base:current
        auth:
          username: $TF_VAR_docker_user
          password: $TF_VAR_docker_token
    resource_class: arm.medium  # Specify ARM resource class
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          command: |
            ./deploy.sh
  deploy:
    docker:
      - image: piegarden/file_mover:8.2
        auth:
          username: $TF_VAR_docker_user
          password: $TF_VAR_docker_token
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Deploy new version
          command: |
            echo "$TF_VAR_backend_deployment_ssh_private_key" | base64 -d > .key && chmod 600 .key
            echo "$TF_VAR_backend_deployment_ssh_public_known_host" | base64 -d > ~/.ssh/known_hosts
            ssh -i ./.key "piegarden@$TF_VAR_backend_public_ip" 'mkdir -p strengthgadget'
            scp -i ./.key docker-compose.yaml "piegarden@$TF_VAR_backend_public_ip:strengthgadget"
            printenv > .env
            scp -i ./.key .env "piegarden@$TF_VAR_backend_public_ip:strengthgadget"
            ssh -i ./.key "piegarden@$TF_VAR_backend_public_ip" 'cd strengthgadget && sudo docker compose down || true && sudo docker compose up -d'
  infra:
    docker:
      - image: alpine/terragrunt
        auth:
          username: $TF_VAR_docker_user
          password: $TF_VAR_docker_token
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          command: cd ./infrastructure/terraform/live/staging/raspberry_pi && ../deploy.sh
  statuscake:
    docker:
      - image: alpine/terragrunt
        auth:
          username: $TF_VAR_docker_user
          password: $TF_VAR_docker_token
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          command: cd ./infrastructure/terraform/live/staging/statuscake && ../deploy.sh



workflows:
  deploy:
    jobs:
      - build:
          filters:
            branches:
              only: master
          context:
            - context-production
            - context-docker-hub
      - infra:
          filters:
            branches:
              only: master
          context:
            - context-production
            - context-docker-hub
      - statuscake:
          filters:
            branches:
              only: master
          context:
            - context-production
      - deploy:
          filters:
            branches:
              only: master
          context:
            - context-production
          requires:
            - build



