version: 2.1

jobs:
  backend-build:
    docker:
      - image: cimg/base:current
        auth:
          username: $TF_VAR_docker_user
          password: $TF_VAR_docker_token
    steps:
      - checkout
      - setup_remote_docker:
          version: 20.10.14
      - run:
          command: |
            cd ./backend && ./deploy.sh
  backend-deploy:
    docker:
      - image: piegarden/cloudflared:2023.10.0
        auth:
          username: $TF_VAR_docker_user
          password: $TF_VAR_docker_token
    steps:
      - checkout
      - setup_remote_docker:
          version: 20.10.14
      - run:
          name: Authenticate using service token and deploy new version
          command: |
            export CF_ACCESS_CLIENT_ID="$TF_VAR_cf_access_client_id"
            export CF_ACCESS_CLIENT_SECRET="$TF_VAR_cf_access_client_secret"
            cloudflared access ssh --hostname pi4.frii.day --url localhost:22

  infra:
    docker:
      - image: alpine/terragrunt
        auth:
          username: $TF_VAR_docker_user
          password: $TF_VAR_docker_token
    steps:
      - checkout
      - setup_remote_docker:
          version: 20.10.14
      - run:
          command: cd ./infrastructure/terraform/live/staging/ecs && ../deploy.sh
  frontend-build:
    docker:
      - image: piegarden/strengthgadget-frontend-agent:0.0.1
        auth:
          username: $TF_VAR_docker_user
          password: $TF_VAR_docker_token
    steps:
      - checkout
      - setup_remote_docker:
          version: 20.10.14
      - run:
          command: |
            cd ./ui && ./deploy.sh && cd ../ &&
            cd ./infrastructure/terraform/live/staging/cloudfront && ../deploy.sh
  statuscake:
    docker:
      - image: alpine/terragrunt
        auth:
          username: $TF_VAR_docker_user
          password: $TF_VAR_docker_token
    steps:
      - checkout
      - setup_remote_docker:
          version: 20.10.14
      - run:
          command: cd ./infrastructure/terraform/live/staging/statuscake && ../deploy.sh



workflows:
  deploy:
    jobs:
#      - backend-build:
#          context:
#            - context-staging
#            - context-docker-hub
#      - infra:
#          context:
#            - context-staging
#            - context-docker-hub
#      - frontend-build:
#          context:
#            - context-staging
#            - context-docker-hub
#      - statuscake:
#          context:
#            - context-staging
      - backend-deploy:
          context:
            - context-staging



